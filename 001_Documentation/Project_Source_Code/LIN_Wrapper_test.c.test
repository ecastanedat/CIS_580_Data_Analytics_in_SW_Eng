/*============================================================================*/
/*                        I BS SOFTWARE GROUP                                 */
/*============================================================================*/
/*                        OBJECT SPECIFICATION                                */
/*============================================================================*/
/*
 * $Source: can_wrapper_RX_validation.c.test $
 * $Revision: $
 * $Author:  $
 * $Date: Nov 1, 2023 1:29:20 PM $
 */
/*============================================================================*/
/* COPYRIGHT (C) CONTINENTAL AUTOMOTIVE 2023                                  */
/* AUTOMOTIVE GROUP, Interior Division, Body and Security                     */
/* ALL RIGHTS RESERVED                                                        */
/*                                                                            */
/* The reproduction, transmission, or use of this document or its content is  */
/* not permitted without express written authority. Offenders will be liable  */
/* for damages.                                                               */
/* All rights, including rights created by patent grant or registration of a  */
/* utility model or design, are reserved.                                     */
/*                                                                            */
/*============================================================================*/
/* Reference documents:                                                       */
/*                                                                            */
/*============================================================================*/
/* OBJECT HISTORY                                                             */
/*============================================================================*/
/*
* $Log: can_wrapper_RX_validation.c.test $

==============================================================================*/

/* BEGIN Configuration */
/*============================================================================*/
// GCC_WARNING_OPTS("")

/* BEGIN Used facilities from other files */
/*============================================================================*/
// USE("")

USE("ShortKeywords") // recommended
USE("Debugger")
// USE("Debugger17")
USE("CANoe")
// USE("PowerSupply")
// USE("STAR")
// USE("HwIO")
// USE("NI_DAQmx")
// USE("Network")
// USE("Oscilloscope")

/* Debugger specific */
GCC_WARNING_OPTS("-DDBG_NO_AUTO")
#define WS "D:\\winIDEA_workspaces\\GM_PTM_MY24\\GM_PLGM_Debug.xjrf"
static uint8_SwattType ws_ID =0;

/* GENERAL */
#define RUN   2
#define ON    1
#define OFF   0
#define TRUE  1
#define FALSE 0

/* WINDOW POSITIONS */
#define DENORMALIZED           0
#define FULLY_CLOSED           1
#define LESS_THAN_POSITION_A   2
#define POSITION_A             3
#define GREATER_THAN_A_LESS_C  4
#define POSITION_C             5
#define GREATER_THAN_C_LESS_FO 6
#define FULLY_OPEN             7

/* PWR REAR CLOSURE MODES */
#define PWR_REAR_DISABLED      0
#define PWR_REAR_FULLY_OPEN    1
#define PWR_REAR_GARAGE        2


INIT
{   // called automatically only before first test

    DESCRIPTION("The aim of this test script (file) is to test each of the Rx signals received by the CAN Wrapper module \n"
                "and verify them against their actual value within the CAN bus.");
    
    SWATT_TEST_ENVIRONMENT("Testbench of PTM_MY24 based on Testbench Release notes ver. X.Y");
    SWATT_TEST_ENVIRONMENT("ECU Project PTM_MY24, Sample TBD");
    
	/* Debugger specific (single core) */
    dbg.closeAny();
    dbg.connectNew(WS, &ws_ID);
    //dbg.download();
    dbg.loadSymbolsOnly();
    dbg.run();

    /* CANoe specific initialization */
    CANoe.connect();
    CANoe.openCfg("D:/DSUsers/uib01493/030_SW/001_Projects/GM/PLGM/Canoe_configs/RBS_PTM_24_24_164.3p0_V1_V3_Kurtis/RBS_PTM_24_24_164.3p0_V1/RBS_PTM_modified.cfg");
    hil.time.wait_ms(2000); // wait to allow loading of the simulation
    CANoe.compileAllNodes();
    CANoe.simulation.start();
    CANoe.envVar.setInt("IgnitionSwitch", RUN);
    CANoe.envVar.setInt("ev_NM_Frames", ON);
    CANoe.envVar.setInt("TransmitInOFFInfinite", ON);
    hil.time.wait_ms(1000); // we wait 1 seconds until the simulation is running well
}

// CLEANUP


SETUP
{ // called automatically before each test

	/* Debugger specific */
	TEST_PRECONDITION("No breakpoints set in the debugger interface");
	dbg.breakpoint.clearAll();

}
// TEARDOWN



TEST(CAN_Signals_Grp_1)
{
    /*Local variables*/
    boolean_SwattType Out_Expected;

    TRACE("");
    DESCRIPTION("In this test we check the value of the Co-Driver Door Ajar signal in the module VS the value in the CAN bus");

    // Test technique according to chapter 2.2.2 of CA0505005_Testing_Method.pdf
    // e.g. Boundary Value Analysis/Equivalence classes/Decision table Test/State Coverage/
    TEST_DESIGN_TECHNIQUE(""); 


    TEST_PRECONDITION("1. Write variable CoDrvDrAjrStat = 0x1\n"
                      "2. Wait 1 sec.");

    TEST_STEP();
    TEST_PROCEDURE("1. Read variable Rte_AppLibIF_R_CoDrvDrAjrStat_CoDrvDrAjrStat_Buf in WinIDEA\n"
                   "2. ");
    MAKE_TEST_VECTOR(
                    INPUTS(char In_CANoeSignal[60];
                           uint8_SwattType In_Value;
                           char In_ECUVariable[100];),

                    OUTPUTS(uint8_SwattType Out_Expected;),

                                     /* In_CANoeSignal                ,In_Value              ,In_ECUVariable                                    | |Out_Expected           */
    /*Co-Driver Door Ajar - true*/   {{"CAN/1/PDU_4011/CoDrvDrAjrStat",TRUE                  ,"Rte_AppLibIF_R_CoDrvDrAjrStat_CoDrvDrAjrStat_Buf"},{TRUE                   }}, /* TS_LIN_173*/
    /*Co-Driver Door Ajar - false*/  {{"CAN/1/PDU_4011/CoDrvDrAjrStat",FALSE                 ,"Rte_AppLibIF_R_CoDrvDrAjrStat_CoDrvDrAjrStat_Buf"},{FALSE                  }},
	
    /*Driver Door Ajar - true*/      {{"CAN/1/PDU_4011/DrvDrAjrStat",  TRUE                  ,"Rte_AppLibIF_R_DrvDrAjrStat_DrvDrAjrStat_Buf"    },{TRUE                   }}, /* TS_LIN_174*/
    /*Driver Door Ajar - false*/     {{"CAN/1/PDU_4011/DrvDrAjrStat",  FALSE                 ,"Rte_AppLibIF_R_DrvDrAjrStat_DrvDrAjrStat_Buf"    },{FALSE                  }},
	
	/*Left Rear Door Ajar - true*/   {{"CAN/1/PDU_4011/LRDrAjrStat",   TRUE                  ,"Rte_AppLibIF_R_LRDrAjrStat_LRDrAjrStat_Buf"      },{TRUE                   }}, /* TS_LIN_257*/
    /*Left Rear Door Ajar - false*/  {{"CAN/1/PDU_4011/LRDrAjrStat",   FALSE                 ,"Rte_AppLibIF_R_LRDrAjrStat_LRDrAjrStat_Buf"      },{FALSE                  }},
	
	/*Right Rear Door Ajar - true*/  {{"CAN/1/PDU_4011/RRDrAjrStat",   TRUE                  ,"Rte_AppLibIF_R_RRDrAjrStat_RRDrAjrStat_Buf"      },{TRUE                   }}, /* TS_LIN_259*/
    /*Right Rear Door Ajar - false*/ {{"CAN/1/PDU_4011/RRDrAjrStat",   FALSE                 ,"Rte_AppLibIF_R_RRDrAjrStat_RRDrAjrStat_Buf"      },{FALSE                  }},
	
	/*Window Pos LF - ($0)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  DENORMALIZED          ,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{DENORMALIZED           }}, /* TS_LIN_260*/
    /*Window Pos LF - ($1)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  FULLY_CLOSED          ,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{FULLY_CLOSED           }},
	/*Window Pos LF - ($2)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  LESS_THAN_POSITION_A  ,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{LESS_THAN_POSITION_A   }},
    /*Window Pos LF - ($3)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  POSITION_A            ,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{POSITION_A  			  }},
	/*Window Pos LF - ($4)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  GREATER_THAN_A_LESS_C ,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{GREATER_THAN_A_LESS_C  }},
    /*Window Pos LF - ($5)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  POSITION_C            ,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{POSITION_C             }},
	/*Window Pos LF - ($6)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  GREATER_THAN_C_LESS_FO,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{GREATER_THAN_C_LESS_FO }},
    /*Window Pos LF - ($7)*/         {{"CAN/1/PDU_4013/WndPstnStsLF",  FULLY_OPEN            ,"Rte_AppLibIF_R_WndPstnStsLF_WndPstnStsLF_Buf"    },{FULLY_OPEN             }},
	
	/*Window Pos LR - ($0)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  DENORMALIZED          ,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{DENORMALIZED           }}, /* TS_LIN_261*/
    /*Window Pos LR - ($1)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  FULLY_CLOSED          ,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{FULLY_CLOSED           }},
	/*Window Pos LR - ($2)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  LESS_THAN_POSITION_A  ,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{LESS_THAN_POSITION_A   }},
    /*Window Pos LR - ($3)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  POSITION_A            ,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{POSITION_A  			  }},
	/*Window Pos LR - ($4)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  GREATER_THAN_A_LESS_C ,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{GREATER_THAN_A_LESS_C  }},
    /*Window Pos LR - ($5)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  POSITION_C            ,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{POSITION_C             }},
	/*Window Pos LR - ($6)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  GREATER_THAN_C_LESS_FO,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{GREATER_THAN_C_LESS_FO }},
    /*Window Pos LR - ($7)*/         {{"CAN/1/PDU_4013/WndPstnStsLR",  FULLY_OPEN            ,"Rte_AppLibIF_R_WndPstnStsLR_WndPstnStsLR_Buf"    },{FULLY_OPEN             }},
	
	/*Window Pos RF - ($0)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  DENORMALIZED          ,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{DENORMALIZED           }}, /* TS_LIN_262*/
    /*Window Pos RF - ($1)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  FULLY_CLOSED          ,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{FULLY_CLOSED           }},
	/*Window Pos RF - ($2)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  LESS_THAN_POSITION_A  ,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{LESS_THAN_POSITION_A   }},
    /*Window Pos RF - ($3)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  POSITION_A            ,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{POSITION_A  			  }},
	/*Window Pos RF - ($4)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  GREATER_THAN_A_LESS_C ,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{GREATER_THAN_A_LESS_C  }},
    /*Window Pos RF - ($5)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  POSITION_C            ,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{POSITION_C             }},
	/*Window Pos RF - ($6)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  GREATER_THAN_C_LESS_FO,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{GREATER_THAN_C_LESS_FO }},
    /*Window Pos RF - ($7)*/         {{"CAN/1/PDU_4013/WndPstnStsRF",  FULLY_OPEN            ,"Rte_AppLibIF_R_WndPstnStsRF_WndPstnStsRF_Buf"    },{FULLY_OPEN             }},
	
	/*Window Pos RR - ($0)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  DENORMALIZED          ,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{DENORMALIZED           }}, /* TS_LIN_263*/
    /*Window Pos RR - ($1)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  FULLY_CLOSED          ,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{FULLY_CLOSED           }},
	/*Window Pos RR - ($2)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  LESS_THAN_POSITION_A  ,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{LESS_THAN_POSITION_A   }},
    /*Window Pos RR - ($3)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  POSITION_A            ,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{POSITION_A  			  }},
	/*Window Pos RR - ($4)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  GREATER_THAN_A_LESS_C ,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{GREATER_THAN_A_LESS_C  }},
    /*Window Pos RR - ($5)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  POSITION_C            ,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{POSITION_C             }},
	/*Window Pos RR - ($6)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  GREATER_THAN_C_LESS_FO,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{GREATER_THAN_C_LESS_FO }},
    /*Window Pos RR - ($7)*/         {{"CAN/1/PDU_4013/WndPstnStsRR",  FULLY_OPEN            ,"Rte_AppLibIF_R_WndPstnStsRR_WndPstnStsRR_Buf"    },{FULLY_OPEN             }},
	
									 /* In_CANoeSignal                             , In_Value(%) , In_ECUVariable                                  					      | |Out_Expected   */
	/*Climate Ctrl F - 25%*/         {{"CAN/1/PDU_4012/CCCGI_FrtBlwFanSpdFdbkRtlzd", 25       	 , "Rte_AppLibIF_R_ClmCtlFrtBlwFanSpd_ClmCtlFrtBlwFanSpdFdbkRtlzd_Buf"    },{64             }}, /*TS_LIN_267*/
	/*Climate Ctrl F - 50%*/         {{"CAN/1/PDU_4012/CCCGI_FrtBlwFanSpdFdbkRtlzd", 50       	 , "Rte_AppLibIF_R_ClmCtlFrtBlwFanSpd_ClmCtlFrtBlwFanSpdFdbkRtlzd_Buf"    },{127            }}, 
	/*Climate Ctrl F - 100%*/        {{"CAN/1/PDU_4012/CCCGI_FrtBlwFanSpdFdbkRtlzd", 100      	 , "Rte_AppLibIF_R_ClmCtlFrtBlwFanSpd_ClmCtlFrtBlwFanSpdFdbkRtlzd_Buf"    },{255            }},
	
									 /* In_CANoeSignal                              , In_Value            , In_ECUVariable                                                                      | |Out_Expected */
	/*Pwr Rear Closure - Disabled*/	 {{"CAN/1/SrlDat2_Prtctd_PDU/PwrRrClsrModeSeltn", PWR_REAR_DISABLED   , "Rte_CanWrapper_RPort_SUM_SSC_PwrRrClsrModeSeltn_SUM_SSC_PwrRrClsrModeSeltn_Buf"    },{PWR_REAR_DISABLED     }}, /*TS_LIN_270*/
	/*Pwr Rear Closure - F Open*/	 {{"CAN/1/SrlDat2_Prtctd_PDU/PwrRrClsrModeSeltn", PWR_REAR_FULLY_OPEN , "Rte_CanWrapper_RPort_SUM_SSC_PwrRrClsrModeSeltn_SUM_SSC_PwrRrClsrModeSeltn_Buf"    },{PWR_REAR_FULLY_OPEN   }}, 
	/*Pwr Rear Closure - Garage*/	 {{"CAN/1/SrlDat2_Prtctd_PDU/PwrRrClsrModeSeltn", PWR_REAR_GARAGE     , "Rte_CanWrapper_RPort_SUM_SSC_PwrRrClsrModeSeltn_SUM_SSC_PwrRrClsrModeSeltn_Buf"    },{PWR_REAR_GARAGE       }},
	
									 /* In_CANoeSignal                         , In_Value   , In_ECUVariable                                                 | |Out_Expected   */
	/*Outside Air Temp - -40*/	     {{"CAN/1/PDU_4011/OATP_OtsAirTmpCrValAuth", -40        , "Rte_AppLibIF_R_OutsideAirTemp_OATP_OtsAirTmpCrValAuth_Buf"    },{0              }}, /*TS_LIN_271*/
	/*Outside Air Temp - 23.5*/	     {{"CAN/1/PDU_4011/OATP_OtsAirTmpCrValAuth", 23.5       , "Rte_AppLibIF_R_OutsideAirTemp_OATP_OtsAirTmpCrValAuth_Buf"    },{127            }},
	/*Outside Air Temp - 87.5*/	     {{"CAN/1/PDU_4011/OATP_OtsAirTmpCrValAuth", 87.5       , "Rte_AppLibIF_R_OutsideAirTemp_OATP_OtsAirTmpCrValAuth_Buf"    },{255            }},

									 /* In_CANoeSignal                            , In_Value    , In_ECUVariable                                                       | |Out_Expected   */
	/*Propulsion St Protected - T*/  {{"CAN/1/SrlDat22_Prtctd_PDU/PSP_EngRnngAuth", TRUE        , "Rte_Diagnostic_Swc_RPort_RX_PSP_EngRnngAuth_PSP_EngRnngAuth_Buf"    },{TRUE              }}, /*TS_LIN_273*/
	/*Propulsion St Protected - F*/  {{"CAN/1/SrlDat22_Prtctd_PDU/PSP_EngRnngAuth", FALSE       , "Rte_Diagnostic_Swc_RPort_RX_PSP_EngRnngAuth_PSP_EngRnngAuth_Buf"    },{FALSE             }}, 

    );
    FOREACH_VECTOR
    {
        /* Variables */
        uint8_SwattType val = 0; //Only for debug purposes.

        /*Set signals in CANoe*/
        CANoe.signal.setValue(IN(In_CANoeSignal), IN(In_Value));
        hil.time.wait_ms(200);
        dbg.stop();

        /*Check signal equivalence in WinIDEA*/
        dbg.variable.getValue(TYPE_ID_SWATT_UINT8, IN(In_ECUVariable), &val);
        //printf("Canoe signal: %s Value: %d || Return signal value from WinIDEA: %d\n", IN(In_CANoeSignal), IN(In_Value), val);
        dbg.variable.checkEquals(TYPE_ID_SWATT_UINT8, IN(In_ECUVariable), OUT(Out_Expected));
        dbg.run();
    }

    TEST_EXPECTED_RESULT("We expect to see the same value set to the input signal in the CAN wrapper appear in the output of it.");

    TEST_POSTCONDITION("N/A");
}

TEST(CAN_Signals_Grp_2)
{
    /*Local variables*/
    boolean_SwattType Out_Expected;

    TRACE("");
    DESCRIPTION("In this test we check the value of the Co-Driver Door Ajar signal in the module VS the value in the CAN bus");

    // Test technique according to chapter 2.2.2 of CA0505005_Testing_Method.pdf
    // e.g. Boundary Value Analysis/Equivalence classes/Decision table Test/State Coverage/
    TEST_DESIGN_TECHNIQUE(""); 


    TEST_PRECONDITION("1. Write variable CoDrvDrAjrStat = 0x1\n"
                      "2. Wait 1 sec.");

    TEST_STEP();
    TEST_PROCEDURE("1. Read variable Rte_AppLibIF_R_CoDrvDrAjrStat_CoDrvDrAjrStat_Buf in WinIDEA\n"
                   "2. ");
    MAKE_TEST_VECTOR(
                    INPUTS(char In_CANoeSignal[60];
                           uint8_SwattType In_Value;
                           char In_ECUVariable[100];),

                    OUTPUTS(uint16_SwattType Out_Expected;),

									 /* In_CANoeSignal          , In_Value(%) , In_ECUVariable                            | |Out_Expected    */
	/*Rear Blower - 25%*/         	 {{"CAN/1/PDU_4012/RrBlwCmd", 25          , "Rte_AppLibIF_R_RrBlwCmd_RrBlwCmd_Buf"    },{256             }}, /*TS_LIN_269*/
	/*Rear Blower - 50%*/         	 {{"CAN/1/PDU_4012/RrBlwCmd", 50          , "Rte_AppLibIF_R_RrBlwCmd_RrBlwCmd_Buf"    },{512             }}, 
	/*Rear Blower - 100%*/        	 {{"CAN/1/PDU_4012/RrBlwCmd", 100         , "Rte_AppLibIF_R_RrBlwCmd_RrBlwCmd_Buf"    },{1023            }},

    );
    FOREACH_VECTOR
    {
        /* Variables */
        uint8_SwattType val = 0; //Only for debug purposes.

        /*Set signals in CANoe*/
        CANoe.signal.setValue(IN(In_CANoeSignal), IN(In_Value));
        hil.time.wait_ms(200);
        dbg.stop();

        /*Check signal equivalence in WinIDEA*/
        dbg.variable.getValue(TYPE_ID_SWATT_UINT16, IN(In_ECUVariable), &val);
        //printf("Canoe signal: %s Value: %d || Return signal value from WinIDEA: %d\n", IN(In_CANoeSignal), IN(In_Value), val);
        dbg.variable.checkEquals(TYPE_ID_SWATT_UINT16, IN(In_ECUVariable), OUT(Out_Expected));
        dbg.run();
    }

    TEST_EXPECTED_RESULT("We expect to see the same value set to the input signal in the CAN wrapper appear in the output of it.");

    TEST_POSTCONDITION("N/A");
}

/* NOTE: The following test case is not possible to automated.
 * SWATT HIL does not have a API capable of reading a local variable
 * within a function. See c_Test_Postcondition section of TS_LIN_264 as
 * an example. 'arg1' cannot be read by SWATT.
 * Test Cases applicable: TS_LIN_264, TS_LIN_266, TS_LIN_268 */
/*TEST(CAN_Signals_Grp_3)
{
    MAKE_TEST_VECTOR(
                        INPUTS(char In_CANoeSignal[60];
                               uint8_SwattType In_Value;
                               char In_Bkp1[100];),

                        OUTPUTS(boolean_SwattType Out_arg1;),

                        {{"CAN/1/NodeStatus_CAN4_PDU01/NodeStsBCM_LcFA", TRUE     , "Rte_Read_CanWrapper_RPort_RX_NodeStsBCM_LcFA_NodeStsBCM_LcFA"    },{TRUE      }},
                        {{"CAN/1/NodeStatus_CAN4_PDU01/NodeStsBCM_LcFA", FALSE    , "Rte_Read_CanWrapper_RPort_RX_NodeStsBCM_LcFA_NodeStsBCM_LcFA"    },{FALSE     }},
        );
	FOREACH_VECTOR
    {
        // Variables to use
        uint8_SwattType arg1 = 0;

        //Set signals in CANoe
        CANoe.signal.setValue(IN(In_CANoeSignal), IN(In_Value));
        hil.time.wait_ms(100);
        dbg.stop();

        //Check signal equivalence in WinIDEA
        dbg.breakpoint.setOnFunction(IN(In_Bkp1));
        dbg.run();
        dbg.breakpoint.waitUntilStopped();
        dbg.variable.getValue(TYPE_ID_SWATT_UINT8, "arg1", &arg1);
        OUT(Out_arg1) = &arg1;
        dbg.breakpoint.clearAll();
        dbg.run();
    }
}*/

//Called at the end of the file execution
CLEANUP
{
    // this section is used to close canoe and winidea at the end of all the tests (canoe will consume memory if left open)
    CANoe.simulation.stop();
    dbg.reset();
    hil.time.wait_ms(200);
    dbg.closeAny();
    CANoe.closeAllConnected();
}

     
     
